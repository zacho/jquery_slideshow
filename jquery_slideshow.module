<?php
// $Id: jquery_slideshow.module,v 1.6 2010/01/18 13:36:47 spydor Exp $

/**
 * @file
 * The main module file
 */

/**
 * Implementation of hook_menu().
 *
 */
function jquery_slideshow_menu() {
  $items = array();
    $items['admin/content/jquery-slideshows'] = array(
      'title' => 'Jquery Slideshows',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('jquery_slideshow_admin'),
      'access arguments' => array('configure jquery slideshow'),
      'description' => 'Create jQuery-based slideshows from imagesfields.'
    );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function jquery_slideshow_perm() {
  return array('configure jquery slideshow');
}


/**
 * Implementation of hook_theme().
 * @author Lee Rowlands <leerowlands at rowlands-bcs dot com>
 */
function jquery_slideshow_theme() {
    $theme = array();
    foreach (_jquery_slideshow_get_presets() as $preset) {
        $theme['jquery_slideshow_formatter_jqs__'. $preset] = array(
            'arguments' => array('element' => NULL),
            'function'  => 'theme_jquery_slideshow_formatter'
        );
    }
    return $theme;
}


/**
 * Base implementation of theme_jquery_slideshow
 *
 * @param array $element node element/field to style
 * @author Lee Rowlands <leerowlands at rowlands-bcs dot com>
 */
function theme_jquery_slideshow_formatter($element) {
    static $rendered;
    if (!$rendered) {
        $rendered = TRUE;
        $formatter = $element['#formatter'];
        $field_name = $element['#field_name'];
        $item = $element['#item'];
        $formatter = $element['#formatter'];
        $nid = $element['#item']['nid'];
        $node = node_load($element['#item']['nid']);;

        
        $dets = explode('__', $formatter);
        $preset = $dets[1];
        $cur_image = 0;

        if ($node->{$field_name}) {

          $jq_slideshow_id = 'jq-slideshow-'. $nid .'-'. $field_name;        
        
          // Render the HTML 
          $output = '<div class="jquery_slideshow" id="'. $jq_slideshow_id .'">';
        
          foreach ($node->{$field_name} as $image) {
            $output .= '<div class="jqs-slide">';
          
            if ($image) {
              $output .= theme('imagecache', $preset, $image['filepath'], $image['data']['alt'], $image['data']['title']);      
              $output .= '<div class="jqs-bottom">';
              if (!empty($image['data']['title']) && (variable_get('jquery_slideshow_inlinetitle', 'Yes') == 'Yes'))  
                $output .= '<div class="jqs-field-title">' . $image['data']['title'] . '</div>';
              if (variable_get('jquery_slideshow_displaycount', 'Yes') == 'Yes') {
                $output .= '<div class="jqs-field-count">' . ++$cur_image . t(' of ') . count($node->{$field_name});
                $output .= "</div> <!-- /jqs-field-count -->";
              }
              $output .= '</div> <!-- /jqs-bottom -->';
            }
            $output .= '</div> <!-- /jqs-slide -->';
          }        
          $output .= '</div> <!-- /jquery-slideshow -->';
          if (variable_get('jquery_slideshow_showcontrols', 'Yes') == 'Yes' && (1 < count($node->{$field_name}))) {
            $output .= '<ul class="jqs-controls">
            <li class="jqs-prev-slide"><a href="#" id="jqs-prev-slide">' . t('Prev') . '</a></li>
            <li class="jqs-next-slide"><a href="#" id="jqs-next-slide">' . t('Next') . '</a></li>
            </ul>';
          }
        }
        _jquery_slideshow_get_settings($jq_slideshow_id, $preset);
        drupal_add_css(drupal_get_path('module', 'jquery_slideshow') . '/jquery_slideshow.css' );
        return $output;
    }
    
}


/**
 * Implementation of hook_field_formatter_info().
 */
function jquery_slideshow_field_formatter_info() {
    $formatters = array();
    foreach (_jquery_slideshow_get_presets() as $preset) {
        $formatters['jqs__'. $preset] = array(
          'label' => t('JQuery Slideshow: '. $preset),
          'field types' => array('image', 'filefield')
        );
    }
    return $formatters;
}


function jquery_slideshow_admin() {
  $form = array();

  $form['jquery_slideshow_effect'] = array(
    '#type' => 'select',
    '#title' => t('Slideshow Effect'),
    '#description' => t('Choose how you want the slide to transition.'),
    '#options' => drupal_map_assoc(array('cover', 'fade', 'scrollDown', 'shuffle', 'toss', 'wipe', 'zoom')),
    '#default_value' => variable_get('jquery_slideshow_effect', 'fade'),
    );

  $form['jquery_slideshow_speed'] = array(
    '#type' => 'select',
    '#title' => t('Transition Speed'),
    '#description' => t('How fast do you want the transition to take (milliseconds).'),
    '#options' => drupal_map_assoc(array(0, 500, 1000, 1500, 2000)),
    '#default_value' => variable_get('jquery_slideshow_speed', 500),
    );

  $form['jquery_slideshow_timeout'] = array(
    '#type' => 'select',
    '#title' => t('Timeout'),
    '#description' => t('How long to pause on each photo (milliseconds). Choose 0 for a manual slideshow.'),
    '#options' => drupal_map_assoc(array(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000)),
    '#default_value' => variable_get('jquery_slideshow_timeout', 4000),
    );

  $form['jquery_slideshow_inlinetitle'] = array(
    '#type' => 'select',
    '#title' => t('Display Title?'),
    '#description' => t('Displays the title over the bottom of the image. You may need to override some settings in CSS'),
    '#options' => drupal_map_assoc(array('Yes', 'No')),
    '#default_value' => variable_get('jquery_slideshow_inlinetitle', 'Yes'),
    );

  $form['jquery_slideshow_displaycount'] = array(
    '#type' => 'select',
    '#title' => t('Display Photo Count?'),
    '#description' => t('This will display the number of photos in slide show (e.g. 1 of 5)'),
    '#options' => drupal_map_assoc(array('Yes', 'No')),
    '#default_value' => variable_get('jquery_slideshow_displaycount', 'Yes'),
    );

  $form['jquery_slideshow_showcontrols'] = array(
    '#type' => 'select',
    '#title' => t('Display Slideshow Controls?'),
    '#description' => t('Displays Next and Prev links to manually advance to the other slides.'),
    '#options' => drupal_map_assoc(array('Yes', 'No')),
    '#default_value' => variable_get('jquery_slideshow_showcontrols', 'Yes'),
    );

  return system_settings_form($form);
}

function jquery_slideshow_admin_submit($form, &$form_state) {
    $form_values = $form_state['values'];
  variable_set('jquery_slideshow_imagecache_preset', $form_values['preset']);
  variable_set('jquery_slideshow_effect', $form_values['effect']);
  variable_set('jquery_slideshow_speed', $form_values['speed']);
  variable_set('jquery_slideshow_timeout', $form_values['timeout']);
  drupal_set_message(t('Jquery Slideshow settings have been saved'));
}


/**
 * Gets javascript settings for slideshow and sets up Drupal behaviour
 *
 * @param string $jq_slideshow_id dom id of slideshow
 * @param string $preset imagecache preset name
 *
 */
function _jquery_slideshow_get_settings($jq_slideshow_id, $preset) {

  jquery_plugin_add('cycle');

  $data = _jquery_slideshow_get_actions($preset);
  drupal_add_js(drupal_get_path('module', 'jquery_slideshow') . '/jquery_slideshow.js');
  drupal_add_js(array('jqueryslideshow' => array(
      $jq_slideshow_id => array(
        //'width' => $data['width'],
        //'height' => $data['height'],
        'fx' => variable_get('jquery_slideshow_effect', 'fade'),
        'speed' => (int)variable_get('jquery_slideshow_speed', 500),
        'timeout' => (int)variable_get('jquery_slideshow_timeout', 4000),
        'next' => '#jqs-next-slide',
        'prev' => '#jqs-prev-slide'
      ),
    )), 'setting');
}

function _jquery_slideshow_get_presets() {

  // Imagecache 1.x
  if (function_exists('_imagecache_get_presets'))
    return _imagecache_get_presets();

  // Imagecache 2.x
  if (function_exists('imagecache_presets')) {
    $presets = imagecache_presets();
    $presetlist = array();
    foreach ($presets as $key => $value) {
        $presetlist[] = $value['presetname'];
    }
    return $presetlist;
  }

}

function _jquery_slideshow_get_actions($preset) {

  $data = array();

  // Imagecache 1.x
  if (function_exists('_imagecache_actions_get_by_presetid')) {
    $presetid = array_search($preset, _jquery_slideshow_get_presets());
    $presets = _imagecache_actions_get_by_presetid($presetid);
    $data['height'] = $presets[$presetid-1]['data']['height'];
    $data['width'] = $presets[$presetid-1]['data']['width'];
  }

  // Imagecache 2.x
  if (function_exists('imagecache_presets')) {
    $preset = imagecache_preset_by_name($preset);
    $data['width'] = $preset['actions'][0]['data']['width'];
    $data['height'] = $preset['actions'][0]['data']['height'];
  }
  return $data;

}
